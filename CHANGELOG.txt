Version 3.5.1 [11/25/2014]
	Fixed issue in Show-InstallationPrompt and Show-InstallationRestartPrompt with how switch parameters with explicitly defined boolean values were passed to powershell.exe when used with the -File parameter

Version 3.5.0 [11/24/2014]
	Added CMTrace compatible log files to Write-Log (now the default). Legacy log format still available through configuration in XML config file
	Added ability to modify HKCU registry settings for all users on a machine by loading registry hives. Added functions to support this: Invoke-HKCURegistrySettingsForAllUsers, Get-UserProfiles, ConvertTo-NTAccountOrSID. Modified functions to support this: Convert-RegistryPath, Get-RegistryKey, Set-RegistryKey, Remove-RegistryKey
	Added ability in Register-DLL / Unregister-DLL to detect bitness of DLL files and register for the correct architecture automatically
	Added ability for Test-PowerPoint to actually detect if user is presenting slideshow in fullscreen mode
	Added Get-LoggedOnUser to get session details for all local and RDP logged on users
	Added Refresh-SessionEnvironmentVariables to allow reloading of newly created environment variables for the current process
	Added new variables for Domain Membership, Process Information, Account Permissions, OS Type and Versions, PowerShell and .NET versions, TimeZone Bias
	Added TRANSFORMSSECURE=1 as default where Transform parameter is specified
	Added ability to detect active console user (user with control of the monitor, keyboard, mouse)
	Added ForceCloseAppsCountdown parameter to Show-InstallationWelcome allowing a countdown to close apps regardless of whether deferral is allowed	
	Added Patch parameter to Execute-MSI to allow an MSP file to be specified on the command line with an MSI installation
	Added ability to Get-InstalledApplication to detect whether a 64-bit or 32-bit application
	Added CreateNoWindow parameter to Execute-Process
	Changed Deploy-Application.exe to new executable built in VB.NET
	Changed detection of Admin rights by looking for Admin SID on the current processes access token, previous method checked for membership in the BuiltInAdministrator group
	Changed Restart Prompt default selected button to Restart Later
	Changed $envOSArchitecture variable so that it reports consistent value regardless of OS language
	Improved detection of change.exe failures for TerminalServerInstallMode
	Improved detection of logged in users, including users connected through RDP
	Improved error trapping and logging of messages throughout script. Modified messages for clarity and consistency.
	Improved parameter validation on all functions to simplify function logic and give standard error messages when function parameters not specified properly, also helps make clear which parameters are mandatory and which are not
	Improved Set-PinnedApplication to detect when one of the chosen actions is not available on an operating system (such as pinning items to Start Menu on Windows 8)
	Improved session 0 detection
	Improved Execute-MSI and Execute-Process to sync parameter names for -Path and -Parameters and add alias for backwards compatibility
	Improved method of detecting OS architecture so that detection works on some non-English operatings systems
	Improved Block-AppExecution to not flash CMD window right before displaying application block message
	Show-InstallationWelcome, Show-InstallationPrompt: Fixed clipping of text when non-default DPI settings used
	Fixed creation of URL shortcuts in New-Shortcut
	Fixed detection of when script is running from a task sequence
	Fixed issue in Get-InstalledApplication where an "Invalid Cast" error was thrown if registry contains a value with invalid data
	Fixed issue in New-Shortcut where an error would be thrown if no icon was specified
	Fixed issue in Test-Battery where the incorrect information would be returned if the battery was failing
	Fixed issue in Send-Keys where there was an improper script exit upon failure
	Fixed issue with Show-BalloonTip where icon was not disposed before exit
	Fixed issue where Block-Execution would display an error creating the scheduled task if the Application Name was too long (command was longer than 261 characters)
	Fixed issue where Block-Execution was not showing a message window when user tried to open a blocked app
	Fixed issue where Block-Execution was creating a scheduled task to clean up blocked apps which would not execute
	Fixed issue where AppDeployToolkitHelp.ps1 threw an error when executed
	Fixed CloseAppsCountdown and PersistPrompt in Show-InstallationWelcome (bug introduced in v3.2)
	Fixed issue in Show-InstallationPrompt and Show-InstallationWelcome where timeout object was not disposed and would cause timeout of subsequent UI components
	Fixed issue with enumerating hashtable boolean parameters into string format
	Fixed centering of Show-InstallationProgress window where DPI scale is not 100%
	Fixed centering of toolkit banner in UI elements where the full length banner is not used
	Fixed issue where MinimizeAll() and UndoMinimizeAll() method cals were inserting a $null into the pipeline
	Fixed issue in Execute-Process to asynchronously capture process Standard Output
	Updated Deploy-Application template to be consistent with the rest of the toolkit. Scripts from previous versions are fully backwards compatible
	Updated German translations
	Updated Norweigan translations
	Updated documentation

Version 3.2.0 [08/22/2014]
	Added further optimization and best practice enhancements to Execute-Process to improve parameter validation, object and exception handling.
	Added a check for in-progress MSI installations preventing an MSI from installing and waits up to 10 minutes - this reduces instances of MSI error code 1618 (Test-MsiExecMutex)
	Added Get-MsiExitCodeMessage - used by Execute-MSI (also available to Execute-Process) to get MSI exit code description if not handled by default.
	Get-InstalledApplication and Remove-MSIApplication now support exact application name matching
	Added error message to clarify when the toolkit fails to dot source and functions are not available
	Improved exception handling in Write-Log
	The install title format on asynchronous UI elements will now match the synchronous UI elements
	Asynchronous toolkit invocations now write to the same log file as synchronous
	Install-MSUpdates now handles re-distributables such as the VC++ runtime redistributables
	Added additional uninstallation sections to Deploy-Application.ps1 template to mirror installation sections
	Added Dutch translations
	(Thanks to mmashwani for his excellent contributions to this release)

Version 3.1.5 [08/01/2014]
	Added Send-Keys function to send a sequence of keys to an application window (Thanks to mmashwani)
	Added 3 optimization/stability improvements to Execute-Process following MS best practice (Thanks to mmashwani)
	Fixed issue where Execute-MSI did not use value from XML file for uninstall but instead ran all uninstalls silently by default
	Fixed error on 1641 exit code (should be a success like 3010)
	Fixed issue with error handling in Invoke-SCCMTask
	Fixed issue with deferral dates where the letter Z is in the month (non-English languages)
	Fixed issue where custom process descriptions failed to display in Show-InstallationWelcome if an exact process name was specified
	Updated French translations

Version 3.1.4 [06/10/2014]
	Added New-Folder and Remove-Folder functions (Thanks to SueH)
	Added NoWait parameter to Execute-Process
	Added the ability for Deploy-Application.exe to point to a different .ps1 file by specifying it on the command-line
	Added checks to Deploy-Application.exe to verify the AppDeployToolkit folder exists
	Added PSAppDeployToolkit icon to Deploy-Application.exe
	Fixed issue where hang could occur if file version was null when using Get-FileVersion
	Improved exception handling and logging for a number of functions

Version 3.1.3 [05/22/2014]
	Added CompressLogs option to the config file. Each Install / Uninstall creates a timestamped zip file with all MSI and PSAppDeployToolkit logs contained within
	Added variable expansion to all paths in the configuration file
	Added documentation for each of the Toolkit internal variables that can be used
	Changed Install-MSUpdates to continue if any errors are encountered when installing updates
	Implement /Force parameter on Update-GroupPolicy (ensure that any logoff message is ignored)
	Fixed issue where the AppClose Countdown timer would reset if the user attempted to close the UI
	Fixed error handling in Set-PinnedApplication if the executable existed but the shortcut wasn't actually pinned

Version 3.1.2 [04/30/2014]
	Added Get-IniValue / Set-IniValue functions. Replaces Get-IniContent / Set-IniContent which were a bit unwieldy. The new functions are much easier to use.
	Added -Value parameter to Get-RegistryKey so that a specific registry value can be retrieved instead of the entire Key as an object
	Fixed Test-Battery to work with machines that can have multiple batteries
	Fixed issue where BlockExecution would fail if a Custom Temp Path was specified in the config file
	Updated examples with latest templates and Office 2013
	Updated French translations
	Updated Japanese translations

Version 3.1.1 [03/27/2014]
	Added -NoCountdown parameter to Show-InstallationRestartPrompt to provide an option for just displaying the restart now or restart later buttons. The UI will restore/reposition itself persistently based on the interval value specified in the config file.
	Fixed issue whereby the restart prompt could be closed from the task bar
	Added Recurse parameter to Copy-File function
	Fixed exact process match on Show-InstallationWelcome was broken in a recent release
	Fixed MinimizeWindows parameter which was broken in a recent release

Version 3.1.0 [02/25/2014]
	Re-coded BlockExecution to be more stable and prevent issues unblocking execution
	Added support for installating applications on Remote Desktop Session Host/Citrix servers
	Added handling of UI assembly load errors affecting PS 2.0 and .NET 4.0 and greater. Errors are ignored only if deploy mode is set to noninteractive
	Fixed ContinueOnError parameter data type which was set as a switch but should have been boolean
	Added default progress message for Uninstallation deployment mode
	Fixed issue with detection of Session 0 on XP which resulted in no UI being displayed
	Fixed issue where Working Directory wouldn't be set correctly if using a subfolder in $dirFiles

Version 3.0.12 [01/17/2014]
	Fixed error handling of Pin To Start in Win 8 (not programatically supported in Win 8.1)
	Fixed issue where user generated thumbs.db file in AppDeployToolkit folder could cause BlockExecution to fail
	Fixed issue where uninstalls would fail if there was a blackslash in the MSI DisplayName
	Fixed issue where Execute-Process could fail but return an exit code of 0 indicating success
	Fixed issue where DeferDays or in some scenarios DeferDeadline values would be erroneously converted to a different timezone.
	Fixed issue where Remove-MSIApplications and Get-InstalledApplication wouldn't find a match if the application name contained square brackets

Version 3.0.11 [01/07/2014]
	Changed persistent prompt interval to default to 60 seconds
	Fixed issue with false Session 0 detected on some XP machines
	Fixed minimum configuration version checking
	Fixed Set-RegistryValue not accepting arrays

Version 3.0.10 [12/05/2013]
	Improved process matching in CloseApps, Remove-MSIApplications & Get-InstalledApplication (for support of apps with special characters, like NotePad++)
	Revert change that prevented AllowDefer and CloseAppsCountdown from working together

Version 3.0.9 [11/29/2013]
	Note	We recently attempted to add a killer new feature and release 3.1.0. We thought we had nailed it but ended up hitting problems once we went into production environments.
			Worse still, we ended up causing a bunch of problems in 3.0.8 trying to reverse out all of these changes. 
			We've prided ourselves on getting to be a really stable toolkit that works well in an enterprise environment. 
			So we're very sorry for the shoddiness of 3.0.8 and have taken a number of steps (a QA process and test scripts) to ensure we don't have these issues going forward.
	Added handling of X86 environment variables so they are never empty
	Added prevention of AllowDefer and CloseAppsCountdown at the same time
	Added x86 support to Register-DLL and Unregister-DLL (if DLL is dropped in SysWOW64)
	Fixed Register-DLL and Unregister-DLL when using paths with spaces
	Fixed sporadic log file corruption that were introduced in v3.0.8
	Fixed CloseAppsCountdown that got broken in v3.0.8
	Fixed DeployMode handling that got broken in v3.0.8

Version 3.0.8 [11/26/2013]
	Show-InstallationWelcome now supports exact process matching by specifying .exe after process name.
	Added Swedish translation & improved German translation.
	Changed Write-Log function to use StreamWriter, which is faster
	Modified application name on block app execution prompt (cosmetic).
	Fixed an issue where displaying BlockExecution message with interfere with the main application installation
	Fixed parameter encapsulation in asynchronous prompts and scheduled task creation.
	Fixed extension script not dot-sourcing from UNC path.
	Fixed Toolkit logpath not reading config file value.
	Fixed UI timeout resetting on Show-InstallationWelcome prompt when continue button is clicked
	Fixed UI timeout not decrementing deferrals remaining.

Version 3.0.7 [10/24/2013]
	Fixed issue where Session 0 was not detected correctly, resulting in issues when attempting to display a UI when none was allowed
	Fixed Installation Prompt and Installation Restart Prompt appearing when deploy mode was non-interactive or silent
	Fixed issue where defer prompt is displayed after force closing multiple applications
	Fixed issue executing blocked app execution dialog from UNC path (executed instead from local temporary directory)
	Added sanitization of all application details to prevent invalid characters in log file name creation (which would break the script)
	Fixed Test-Battery function returning inverse value (was True when Power was connected)
	Fixed error failing to locate schtasks.exe 
	Fixed "Restart Now" button text not using text from config file
	Corrected the window properties of the countdown-no-hide phase of restart prompt to be topmost.

Version 3.0.6 [10/10/2013]
	Added PersistPrompt parameter to Show-InstallationWelcome and Show-InstallationPrompt. Prompt window is persistently returned to center screen after interval specified in config file (default 10 seconds). For Show-InstallationWelcome, this only takes effect if deferral is not available to user. The user will have no option but to respond to the prompt - resistance is futile!
	Added example advanced Office 2010 deployment script
	Asynchronous actions now write to the same log file as synchronous actions
	Changed Defer Exit Code default to 5000. In CM07, deployments with deferrals should be set on a recurring schedule (ie, every 4 hours, not just As Soon As Possible). In CM12, the Application Model evaluates once a day by default (can be changed in Client Settings)
	Fixed Get-ScheduledTask not running on non-English system
	Fixed error deleting deferral history in registry on successful installation.
	Fixed non default Defer Exit Code from displaying error - should display a warning
	Updated documentation with information on how to build and deploy Adobe Acrobat using SCCM 2007 / 2012 packages, and SCCM 2012 application model
	Updated documentation with information on how to use advanced Office 2010 deployment script
	Updated documentation with important information on how deferrals work with SCCM 2007 and differences with SCCM 2012

Version 3.0.5 [09/27/2013]
	Fixed issue with Show-InstallationPrompt not running asynchronously with the NoWait parameter.
	Fixed issue with Show-InstallationRestartPrompt closing with the parent process.
	Fixed issue matching application names with brackets in Remove-MSIApplications.	
	Fixed exception after clicking "Close Programs" button on Show-InstallationWelcomePrompt (only known to affect v3.0.4).
	Fixed issue with one deferral more showing than is remaining (cosmetic only)
	Deferral history is now reset on successful installation	
	Added ExitOnTimeout parameter to Show-InstallationPrompt (default is true)
	Added MinimizeWindows parameter to Show-InstallationPrompt (default is false)
	Added MinimizeWindows parameter to Show-InstallationWelcome (default is true)
	Added extra space for the <DeferPrompt_WelcomeMessage> message	
	Added additional XML configuration items:
		- Specify separate toolkit and msi log directories
		- Specify whether administrator rights are required	
		- Minimum supported version check for the XMl config file
		- Configure deferral exit code
		- Configure temporary path for caching toolkit files
		- Configure registry path for storing deferral information

Version 3.0.4 [09/13/2013]
	Added parameter to Show-InstallationWelcome called "AllowDeferCloseApps" which only provides a deferral option if there are running applications that need to be closed.
	Added ability to configure the timeout period for Show-InstallationPrompt
	Added option to position progress window in bottom right of screen (above task bar) and specify whether it is topmost.
	Added Danish translations
	Added Italian translations
	Added Japanese translations
	Changes to French translations
	Fixed issue where Test-MSUpdates function could fail with an exception calling QueryHistory
	Fixed issue where Install-MSUpdates function could fail with an "argument is null or empty" exception
	Removed default ButtonRightText "OK" value on Show-InstallationPrompt to allow prompts with only the middle button.
	The exit code used for UI timeouts or deferrals can now be configured in XML (default is 1618).

Version 3.0.3 [09/05/2013]
	Fixed issue where spaces in the file path would cause block execution prompt not to work
	Fixed issue where non-English UIs which were not already localized would fail to fall back on English as a default
	Fixed issue with uninstalling applications with non-ascii characters in the name or version

Version 3.0.2 [08/29/2013]

	Added CheckDiskSpace and RequiredDiskSpace parameters to Show-InstallationWelcome
		If CheckDiskSpace parameter is used, disk space will be evaluated before showing the Welcome screen. If disk space requirements are not met, an error message will be displayed and a Fast Retry (1618) exit code generated. The disk space requirements are calculated automatically based on the size of the source files or by specifying the required space in MB using the RequiredDiskSpace parameter. 
	Added Get-FreeDiskSpace function (returns value in MB)
	Show-InstallationPrompt enhancements
		MessageAlignment - align message text on the prompt 
		Icon - display a system icon on the prompt
		NoWait - display the prompt asynchronously and continue the script without waiting for user response
		Costmetic improvements
	Added parameter validation to Invoke-SCCMTask
	Cosmetic improvements to Show-InstallationWelcome & Show-InstallationProgress 
	Fixed issue where user would not be granted their last deferral.

Version 3.0.1 [08/28/2013]
	Fixed issue where using NonInteractive DeployMode would cause a bluescreen (!!!)
	Fixed issue where Remove-MSIApplications would only remove the first application if multiple matches were made
	Fixed issue where automatic timeout of Welcome screen was not triggered
	Fixed issue where automatic timeout of installation prompt caused a .NET exception
	Fixed help system to work with Standard User rights
	Fixed text cutoff issue with non-English languages
	Minor fixes to the help information and default template
	Updated French translation

Version 3.0.0 [08/23/2013]
	Each UI element now has a customizable banner
	Show-InstallationWelcome function
		Replaces Stop-RunningApplications (deprecated) and presents a unified welcome screen
		Deferral system. Ability to defer installation x number of times / days / until deadline date
		Ability to force closing applications after a countdown period
	Show-InstallationPrompt function
		Replaces Show-DialogBox (deprecated)
		Standardised UI with the rest of the toolkit
		Customisable text and 3 buttons
	Show-InstallationRestartPrompt function
		Displays a restart prompt with a countdown to a forced restart, independant of SCCM restart mechanism
	Invoke-SCCMTask function
		Replaces Update-SCCMInventory and Update-SCCMDeployments (deprecated)
		No longer reliant on COM object which could cause issues on x64 machines
	Get-UniversalDate function
	Write-Log now works with the PowerShell Pipeline and -PassThru
	Set-RegistryKey now accepts arrays
	Improved error handling: ContinueOnError switch allows to to control the error action for functions that fail. ContinueOnErrorGlobalPreference allows you to debug the script to detect errors in functions.
	Fixed issue with BlockExecution failing under PowerShell v2
	Fixed issue with Show-InstallationProgress failing on .NET Framework versions prior to 4.5
	Fixed issue with command-line parameters not being passed through Deploy-Application.exe on x86 operating systems
	Test-MSUpdates KB regex matching is now case insensitive
	Parameters passed to scripts are now logged.

	Backwards Compatibility Considerations:

		The following functions have been deprecated and are no longer supported:
		Stop-RunningApplications
		Update-SCCMInventory
		Update-SCCMDeployments

Version 2.0.1 [08/15/2013]
	New Show-DialogBox parameters: TopMost and DefaultButton. Specify whether dialog box is topmost (new default) and specify default selected button.
	Fixed issue with long file names when removing certain types of software using Remove-MSIApplications.
	Added ability to turn automatic balloon notifications on or off in the XML config file.
	Attempted to fix issue with stale balloon notifications.
	Attempted to fix issue with installation progress not updating or hanging.

Version 2.0.0 [08/07/2013]
	Initial Public Release.	
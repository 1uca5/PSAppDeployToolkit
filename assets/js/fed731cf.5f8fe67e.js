"use strict";(self.webpackChunkpsadt_docs=self.webpackChunkpsadt_docs||[]).push([[7974],{9613:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(9496);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,l=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=s(r),f=i,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||l;return r?n.createElement(m,a(a({ref:t},p),{},{components:r})):n.createElement(m,a({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=r.length,a=new Array(l);a[0]=f;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:i,a[1]=o;for(var s=2;s<l;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4667:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=r(8957),i=(r(9496),r(9613));const l={id:"Get-PEFileArchitecture",title:"Get-PEFileArchitecture",description:'Help page for the "Get-PEFileArchitecture" command',keywords:["PSAppDeployToolkit","PowerShell","Help","Documentation"],hide_title:!1,hide_table_of_contents:!1,custom_edit_url:null},a=void 0,o={unversionedId:"reference/functions/Get-PEFileArchitecture",id:"reference/functions/Get-PEFileArchitecture",title:"Get-PEFileArchitecture",description:'Help page for the "Get-PEFileArchitecture" command',source:"@site/docs/reference/functions/Get-PEFileArchitecture.mdx",sourceDirName:"reference/functions",slug:"/reference/functions/Get-PEFileArchitecture",permalink:"/docs/reference/functions/Get-PEFileArchitecture",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"Get-PEFileArchitecture",title:"Get-PEFileArchitecture",description:'Help page for the "Get-PEFileArchitecture" command',keywords:["PSAppDeployToolkit","PowerShell","Help","Documentation"],hide_title:!1,hide_table_of_contents:!1,custom_edit_url:null},sidebar:"reference",previous:{title:"Get-ObjectProperty",permalink:"/docs/reference/functions/Get-ObjectProperty"},next:{title:"Get-PendingReboot",permalink:"/docs/reference/functions/Get-PendingReboot"}},c={},s=[{value:"SYNOPSIS",id:"synopsis",level:2},{value:"SYNTAX",id:"syntax",level:2},{value:"DESCRIPTION",id:"description",level:2},{value:"EXAMPLES",id:"examples",level:2},{value:"EXAMPLE 1",id:"example-1",level:3},{value:"PARAMETERS",id:"parameters",level:2},{value:"-FilePath",id:"-filepath",level:3},{value:"-ContinueOnError",id:"-continueonerror",level:3},{value:"-PassThru",id:"-passthru",level:3},{value:"CommonParameters",id:"commonparameters",level:3},{value:"INPUTS",id:"inputs",level:2},{value:"System.IO.FileInfo.",id:"systemiofileinfo",level:3},{value:"Accepts a FileInfo object from the pipeline.",id:"accepts-a-fileinfo-object-from-the-pipeline",level:3},{value:"OUTPUTS",id:"outputs",level:2},{value:"System.String",id:"systemstring",level:3},{value:"Returns a string indicating the file binary type.",id:"returns-a-string-indicating-the-file-binary-type",level:3},{value:"NOTES",id:"notes",level:2},{value:"RELATED LINKS",id:"related-links",level:2}],p={toc:s},u="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"synopsis"},"SYNOPSIS"),(0,i.kt)("p",null,"Determine if a PE file is a 32-bit or a 64-bit file."),(0,i.kt)("h2",{id:"syntax"},"SYNTAX"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-PEFileArchitecture [-FilePath] <FileInfo[]> [[-ContinueOnError] <Boolean>] [-PassThru] [<CommonParameters>]\n")),(0,i.kt)("h2",{id:"description"},"DESCRIPTION"),(0,i.kt)("p",null,"Determine if a PE file is a 32-bit or a 64-bit file by examining the file's image file header."),(0,i.kt)("p",null,"PE file extensions: .exe, .dll, .ocx, .drv, .sys, .scr, .efi, .cpl, .fon"),(0,i.kt)("h2",{id:"examples"},"EXAMPLES"),(0,i.kt)("h3",{id:"example-1"},"EXAMPLE 1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-powershell"},'Get-PEFileArchitecture -FilePath "$env:windir\\notepad.exe"\n')),(0,i.kt)("h2",{id:"parameters"},"PARAMETERS"),(0,i.kt)("h3",{id:"-filepath"},"-FilePath"),(0,i.kt)("p",null,"Path to the PE file to examine."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"Type: FileInfo[]\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: True (ByPropertyName, ByValue)\nAccept wildcard characters: False\n")),(0,i.kt)("h3",{id:"-continueonerror"},"-ContinueOnError"),(0,i.kt)("p",null,"Continue if an error is encountered.\nDefault is: $true."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"Type: Boolean\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 2\nDefault value: True\nAccept pipeline input: False\nAccept wildcard characters: False\n")),(0,i.kt)("h3",{id:"-passthru"},"-PassThru"),(0,i.kt)("p",null,"Get the file object, attach a property indicating the file binary type, and write to pipeline"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n")),(0,i.kt)("h3",{id:"commonparameters"},"CommonParameters"),(0,i.kt)("p",null,"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see ",(0,i.kt)("a",{parentName:"p",href:"http://go.microsoft.com/fwlink/?LinkID=113216"},"about_CommonParameters"),"."),(0,i.kt)("h2",{id:"inputs"},"INPUTS"),(0,i.kt)("h3",{id:"systemiofileinfo"},"System.IO.FileInfo."),(0,i.kt)("h3",{id:"accepts-a-fileinfo-object-from-the-pipeline"},"Accepts a FileInfo object from the pipeline."),(0,i.kt)("h2",{id:"outputs"},"OUTPUTS"),(0,i.kt)("h3",{id:"systemstring"},"System.String"),(0,i.kt)("h3",{id:"returns-a-string-indicating-the-file-binary-type"},"Returns a string indicating the file binary type."),(0,i.kt)("h2",{id:"notes"},"NOTES"),(0,i.kt)("p",null,"This is an internal script function and should typically not be called directly."),(0,i.kt)("h2",{id:"related-links"},"RELATED LINKS"))}d.isMDXComponent=!0}}]);